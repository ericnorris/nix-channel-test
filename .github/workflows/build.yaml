name: Build

on:
  push:
    branches:
      - main

jobs:
  x86_64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Configure GCS S3-compatible credentials
        run: |
          # Set up the credentials for the current user
          mkdir ~/.aws

          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          # Then copy the credentials to the root user for the nix daemon
          sudo mkdir /root/.aws
          sudo cp ~/.aws/credentials /root/.aws/credentials

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4
        with:
          extra-conf: |
            extra-substituters = s3://muck-intromit-lizard?endpoint=https://storage.googleapis.com

      - name: Install nix-eval-jobs
        run:  nix profile install nixpkgs#nix-eval-jobs

      - run: ./build-and-publish-unchanged.sh

  aarch64:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64

      - name: Configure GCS S3-compatible credentials
        run: |
          # Set up the credentials for the current user
          mkdir ~/.aws

          cat << EOF > ~/.aws/credentials
          [default]
          aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EOF

          # Then copy the credentials to the root user for the nix daemon
          sudo mkdir /root/.aws
          sudo cp ~/.aws/credentials /root/.aws/credentials

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v4
        with:
          extra-conf: |
            extra-substituters = s3://muck-intromit-lizard?endpoint=https://storage.googleapis.com
            extra-platforms    = aarch64-linux

      - name: Install nix-eval-jobs
        run:  nix profile install nixpkgs#nix-eval-jobs

      - run: ./build-and-publish-unchanged.sh --argstr system aarch64-linux
